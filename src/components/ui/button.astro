---
import { cn } from "../../lib/utils"

// Button variant styles
const buttonVariants = {
  variant: {
    default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
    destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
    outline: "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
    secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
    ghost: "hover:bg-accent hover:text-accent-foreground",
    link: "text-primary underline-offset-4 hover:underline",
  },
  size: {
    default: "h-9 px-4 py-2",
    sm: "h-8 rounded-md px-3 text-xs",
    lg: "h-10 rounded-md px-8",
    icon: "h-9 w-9",
  }
}

const baseClasses = "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50"

export interface Props {
  class?: string
  variant?: keyof typeof buttonVariants.variant
  size?: keyof typeof buttonVariants.size
  type?: "button" | "submit" | "reset"
  disabled?: boolean
  onclick?: string
  href?: string
  target?: string
  rel?: string
}

const { 
  class: className, 
  variant = "default", 
  size = "default", 
  type = "button",
  disabled = false,
  onclick,
  href,
  target,
  rel,
  ...props 
} = Astro.props as Props

const variantClasses = buttonVariants.variant[variant] || buttonVariants.variant.default
const sizeClasses = buttonVariants.size[size] || buttonVariants.size.default
const buttonClasses = cn(baseClasses, variantClasses, sizeClasses, className)

const Tag = href ? "a" : "button"
---

{Tag === "a" ? (
  <a 
    class={buttonClasses}
    href={href}
    target={target}
    rel={rel}
    {...props}
  >
    <slot />
  </a>
) : (
  <button 
    class={buttonClasses}
    type={type}
    disabled={disabled}
    onclick={onclick}
    {...props}
  >
    <slot />
  </button>
)}